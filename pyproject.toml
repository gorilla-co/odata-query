[tool.poetry]
name = "odata-query"
version = "0.5.0"
description = "An OData query parser and transpiler."
authors = ["Oliver Hofkens <oliver@gorilla.co>"]
readme = "README.rst"
license = "MIT"
keywords = ["OData", "Query", "Parser"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Web Environment",
    "Framework :: Django",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: SQL",
    "Topic :: Database",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Internet :: WWW/HTTP :: Indexing/Search",
    "Topic :: Software Development :: Compilers"
]
include = ["odata_query/py.typed"]

[tool.poetry.dependencies]
python = "^3.7"

python-dateutil = "^2.8.1"
sly = "^0.4"

django = { version = ">=2.2", optional = true }
sqlalchemy = { version = "^1.4", optional = true }

black = { version = "^22.1", optional = true }
bump2version = { version = "^1.0", optional = true }
flake8 = { version = "^3.8", optional = true }
isort = { version = "^5.7", optional = true }
mypy = { version = "^0.931", optional = true }
types-python-dateutil = { version = "^2.8.1", optional = true }
pytest = { version = "^6.2", optional = true }
pytest-cov = { version = "*", optional = true }
sphinx = { version = "<4.0", optional = true }
sphinx-rtd-theme = { version = "^0.5", optional = true }
vulture = { version = "^2.3", optional = true }

[tool.poetry.extras]
dev = ["bump2version"]
django = ["django"]
docs = ["sphinx", "sphinx-rtd-theme"]
linting = ["flake8", "black", "isort", "mypy", "types-python-dateutil", "yamllint", "vulture"]
sqlalchemy = ["sqlalchemy"]
testing = ["pytest", "pytest-cov"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
